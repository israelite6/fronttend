{"version":3,"sources":["Config/Api.js","Utils/Fetch.js","Api/Queries/Vehicle.js","Container/Landing/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["URL","Fetch","a","query","variables","options","headers","authorization","body","JSON","stringify","method","fetch","rawResponse","json","data","Vehicle","VEHICLE_QUERY","columns","id","label","minWidth","format","value","align","useStyles","makeStyles","root","width","container","maxHeight","searchWrapper","Landing","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","vehicle","setVehicle","search","setSearch","getVehicle","useCallback","handleSearchChange","target","handleSearch","event","useEffect","Paper","className","Box","flexDirection","justifyContent","alignItems","component","display","gridGap","marginRight","TextField","variant","onChange","Button","onClick","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","style","TableBody","slice","row","hover","role","tabIndex","bike_id","TablePagination","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f0fecc4.chunk.js","sourcesContent":["export const URL = \"http://localhost:4000/graphql\";\n","import { URL } from \"../Config/Api\";\n\n/**\n *\n * @param {String} query\n * @param {Object} variables\n * @returns\n */\nexport default async function Fetch({ query, variables = {} }) {\n  const options = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer TESTTOKEN`,\n    },\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n    method: \"POST\",\n  };\n  try {\n    const rawResponse = await fetch(URL, options);\n    const { data } = await rawResponse.json();\n    return data;\n  } catch (e) {\n    return { Vehicle: [] };\n  }\n}\n","export const VEHICLE_QUERY = `\n  query ($id: ID) {\n    Vehicle (id: $id){\n      bike_id\n      lat\n      lon\n      is_reserved\n      is_disabled\n      vehicle_type\n    }\n  }\n`;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport {\n  TextField,\n  TableRow,\n  TablePagination,\n  Box,\n  Button,\n} from \"@material-ui/core\";\nimport Fetch from \"../../Utils/Fetch\";\nimport { VEHICLE_QUERY } from \"../../Api\";\n\nconst columns = [\n  { id: \"bike_id\", label: \"ID\", minWidth: 170 },\n  {\n    id: \"is_disabled\",\n    label: \"Disabled\",\n    minWidth: 100,\n    format: (value) => (value === \"0\" ? \"No\" : \"Yes\"),\n  },\n  {\n    id: \"is_reserved\",\n    label: \"Reversed\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => (value === \"0\" ? \"No\" : \"Yes\"),\n  },\n  {\n    id: \"lat\",\n    label: \"Latitutde\",\n    minWidth: 170,\n    align: \"right\",\n  },\n  {\n    id: \"lon\",\n    label: \"Longitude\",\n    minWidth: 170,\n    align: \"right\",\n  },\n  {\n    id: \"vehicle_type\",\n    label: \"Type\",\n    minWidth: 170,\n    align: \"right\",\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n  searchWrapper: {},\n});\n\nexport default function Landing() {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [vehicle, setVehicle] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const getVehicle = useCallback(async ({ id } = {}) => {\n    const { Vehicle } = await Fetch({\n      query: VEHICLE_QUERY,\n      variables: { id },\n    });\n    setVehicle(Vehicle);\n  }, []);\n\n  const handleSearchChange = useCallback(({ target: { value } }) => {\n    setSearch(value);\n  }, []);\n\n  const handleSearch = useCallback(\n    (event) => {\n      getVehicle({ id: search });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [search]\n  );\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getVehicle();\n  }, []);\n\n  return (\n    <Paper className={classes.root}>\n      <Box\n        flexDirection='row'\n        justifyContent='flex-end'\n        alignItems='center'\n        width='100%'\n        component='div'\n        display='flex'\n        gridGap='10'\n      >\n        <Box marginRight={5}>\n          <TextField\n            id='outlined-error'\n            label='Search'\n            variant='outlined'\n            onChange={handleSearchChange}\n          />\n        </Box>\n\n        <Button variant='contained' onClick={handleSearch}>\n          Search\n        </Button>\n      </Box>\n\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label='sticky table'>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {vehicle\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow\n                    hover\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={row.bike_id}\n                  >\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component='div'\n        count={vehicle.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport Landing from \"./Container/Landing/Landing\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Landing />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}